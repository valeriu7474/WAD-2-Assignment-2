{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad2-Assignment2\\\\reactApp\\\\src\\\\sample\\\\moviesContext.js\";\nimport React, { useState, createContext, useEffect, useReducer } from \"react\";\nimport { getMovies } from \"../api/movie-api\";\nexport const MoviesContext = createContext(null);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      return {\n        movies: action.payload.result\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst MoviesContextProvider = props => {\n  const [state, dispatch] = useReducer(reducer, {\n    movies: []\n  });\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    getMovies().then(result => {\n      console.log(result);\n      dispatch({\n        type: \"load\",\n        payload: {\n          result\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(MoviesContext.Provider, {\n    value: {\n      movies: state.movies,\n      setAuthenticated\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default MoviesContextProvider;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/wad2-Assignment2/reactApp/src/sample/moviesContext.js"],"names":["React","useState","createContext","useEffect","useReducer","getMovies","MoviesContext","reducer","state","action","type","movies","payload","result","MoviesContextProvider","props","dispatch","authenticated","setAuthenticated","then","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,aAAa,GAAGJ,aAAa,CAAC,IAAD,CAAnC;;AAEP,MAAMK,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,aAAO;AAAEC,QAAAA,MAAM,EAAEF,MAAM,CAACG,OAAP,CAAeC;AAAzB,OAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMM,qBAAqB,GAAGC,KAAK,IAAI;AACrC,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBZ,UAAU,CAACG,OAAD,EAAU;AAAEI,IAAAA,MAAM,EAAE;AAAV,GAAV,CAApC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,KAAD,CAAlD;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,GAAGc,IAAZ,CAAiBN,MAAM,IAAI;AACzBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACAG,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,MAAR;AAAgBE,QAAAA,OAAO,EAAE;AAACC,UAAAA;AAAD;AAAzB,OAAD,CAAR;AACD,KAHD;AAID,GALQ,EAKP,EALO,CAAT;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,MAAM,EAAEH,KAAK,CAACG,MADT;AAELO,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,KAAK,CAACO,QANT,CADF;AAUD,CArBD;;AAuBA,eAAeR,qBAAf","sourcesContent":["import React, { useState, createContext, useEffect, useReducer } from \"react\";\r\nimport { getMovies } from \"../api/movie-api\";\r\n\r\nexport const MoviesContext = createContext(null);\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"load\":\r\n      return { movies: action.payload.result};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MoviesContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, { movies: []});\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getMovies().then(result => {\r\n      console.log(result);\r\n      dispatch({ type: \"load\", payload: {result}});\r\n    });\r\n  },[]);\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        setAuthenticated\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MoviesContextProvider"]},"metadata":{},"sourceType":"module"}