{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad-api-labs-2020\\\\reactApp\\\\src\\\\sample\\\\loginPage.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = props => {\n  const context = useContext(AuthContext);\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    context.authenticate(userName, password);\n  }; // Set 'from' to path where browser is redirected after a successful login.\n  // Either / or the protected path user tried to access.\n\n\n  const {\n    from\n  } = props.location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  if (context.isAuthenticated === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: from,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Login page\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"You must log in to view the protected pages \"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    placeholder: \"user name\",\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Not Registered?\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Sign Up!\")));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/wad-api-labs-2020/reactApp/src/sample/loginPage.js"],"names":["React","useContext","useState","Redirect","AuthContext","Link","LoginPage","props","context","userName","setUserName","password","setPassword","login","authenticate","from","location","state","pathname","isAuthenticated","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,OAAO,GAAGP,UAAU,CAACG,WAAD,CAA1B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMW,KAAK,GAAG,MAAM;AAClBL,IAAAA,OAAO,CAACM,YAAR,CAAqBL,QAArB,EAA+BE,QAA/B;AACD,GAFD,CALyB,CASzB;AACA;;;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWR,KAAK,CAACS,QAAN,CAAeC,KAAf,IAAwB;AAAEF,IAAAA,IAAI,EAAE;AAAEG,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAzC;;AAEA,MAAIV,OAAO,CAACW,eAAR,KAA4B,IAAhC,EAAsC;AACpC,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEJ,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFF,eAGE;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,WAAW,EAAC,WAAjC;AAA6C,IAAA,QAAQ,EAAEK,CAAC,IAAI;AAC1DV,MAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALb,eAME;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,WAAW,EAAC,UAAjD;AAA4D,IAAA,QAAQ,EAAEF,CAAC,IAAI;AACzER,MAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAQa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARb,eAUE;AAAQ,IAAA,OAAO,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAXF,CADF;AAgBD,CAhCD;;AAkCA,eAAeP,SAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = props => {\n  const context = useContext(AuthContext)\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = () => {\n    context.authenticate(userName, password);\n  };\n\n  // Set 'from' to path where browser is redirected after a successful login.\n  // Either / or the protected path user tried to access.\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n  if (context.isAuthenticated === true) {\n    return <Redirect to={from} />;\n  }\n  return (\n    <>\n      <h2>Login page</h2>\n      <p>You must log in to view the protected pages </p>\n      <input id=\"username\" placeholder=\"user name\" onChange={e => {\n        setUserName(e.target.value);\n      }}></input><br />\n      <input id=\"password\" type=\"password\" placeholder=\"password\" onChange={e => {\n        setPassword(e.target.value);\n      }}></input><br />\n      {/* Login web form  */}\n      <button onClick={login}>Log in</button>\n      <p>Not Registered?\n      <Link to=\"/signup\">Sign Up!</Link></p>\n    </>\n  );\n};\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}