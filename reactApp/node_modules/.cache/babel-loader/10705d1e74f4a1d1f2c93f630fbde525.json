{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad-api-labs-2020\\\\reactApp\\\\src\\\\sample\\\\loginPage.js\";\nimport React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = props => {\n  const context = useContext(AuthContext);\n\n  const login = () => {\n    context.authenticate(\"user1\", \"pass1\");\n  }; // Set 'from' to path where browser is redirected after a successful login.\n  // Either / or the protected path user tried to access.\n\n\n  const {\n    from\n  } = props.location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  if (context.isAuthenticated === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: from,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Login page\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"You must log in to view the protected pages \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Sign Up!\"));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/wad-api-labs-2020/reactApp/src/sample/loginPage.js"],"names":["React","useContext","Redirect","AuthContext","Link","LoginPage","props","context","login","authenticate","from","location","state","pathname","isAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,IAAR,QAAoB,kBAApB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,OAAO,GAAGN,UAAU,CAACE,WAAD,CAA1B;;AAEA,QAAMK,KAAK,GAAG,MAAM;AAClBD,IAAAA,OAAO,CAACE,YAAR,CAAqB,OAArB,EAA8B,OAA9B;AACD,GAFD,CAHyB,CAOzB;AACA;;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,KAAK,CAACK,QAAN,CAAeC,KAAf,IAAwB;AAAEF,IAAAA,IAAI,EAAE;AAAEG,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAzC;;AAEA,MAAIN,OAAO,CAACO,eAAR,KAA4B,IAAhC,EAAsC;AACpC,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEJ,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFF,eAIE;AAAQ,IAAA,OAAO,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF;AASD,CAvBD;;AAyBA,eAAeH,SAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {AuthContext} from './authContext';\nimport {Link } from \"react-router-dom\";\n\nconst LoginPage = props => {\n  const context = useContext(AuthContext)\n\n  const login = () => {\n    context.authenticate(\"user1\", \"pass1\");\n  };\n  \n  // Set 'from' to path where browser is redirected after a successful login.\n  // Either / or the protected path user tried to access.\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n  if (context.isAuthenticated === true) {\n    return <Redirect to={from} />;\n  }\n  return (\n    <>\n      <h2>Login page</h2>\n      <p>You must log in to view the protected pages </p>\n      {/* Login web form  */}\n      <button onClick={login}>Log in</button>\n      <Link to=\"/signup\">Sign Up!</Link>\n    </>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}