{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\moviesApp\\\\src\\\\contexts\\\\moviesContext.js\";\nimport React, { useEffect, createContext, useReducer } from \"react\";\nimport { getMovies, getUpcomingMovies } from \"../api/tmdb-api\";\nexport var MoviesContext = createContext(null);\n\nvar reducer = (state, action) => {\n  switch (action.type) {\n    case \"add-favorite\":\n      return {\n        movies: state.movies.map(m => m.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, m), {}, {\n          favorite: true\n        }) : m),\n        upcoming: [...state.upcoming]\n      };\n\n    case \"load\":\n      return {\n        movies: action.payload.movies,\n        upcoming: [...state.upcoming]\n      };\n\n    case \"load-upcoming\":\n      return {\n        upcoming: action.payload.movies,\n        movies: [...state.movies]\n      };\n\n    case \"add-review\":\n      return {\n        movies: state.movies.map(m => m.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, m), {}, {\n          review: action.payload.review\n        }) : m)\n      };\n      break;\n\n    default:\n      return state;\n  }\n};\n\nvar MoviesContextProvider = props => {\n  var _useReducer = useReducer(reducer, {\n    movies: [],\n    upcoming: []\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var addToFavorites = movieId => {\n    var index = state.movies.map(m => m.id).indexOf(movieId);\n    dispatch({\n      type: \"add-favorite\",\n      payload: {\n        movie: state.movies[index]\n      }\n    });\n  };\n\n  var addReview = (movie, review) => {\n    dispatch({\n      type: \"add-review\",\n      payload: {\n        movie,\n        review\n      }\n    });\n  };\n\n  useEffect(() => {\n    getMovies().then(movies => {\n      dispatch({\n        type: \"load\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    getUpcomingMovies().then(movies => {\n      dispatch({\n        type: \"load-upcoming\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(MoviesContext.Provider, {\n    value: {\n      movies: state.movies,\n      upcoming: state.upcoming,\n      favorites: state.favorites,\n      addToFavorites: addToFavorites,\n      addReview: addReview\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default MoviesContextProvider;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/moviesApp/src/contexts/moviesContext.js"],"names":["React","useEffect","createContext","useReducer","getMovies","getUpcomingMovies","MoviesContext","reducer","state","action","type","movies","map","m","id","payload","movie","favorite","upcoming","review","MoviesContextProvider","props","dispatch","addToFavorites","movieId","index","indexOf","addReview","then","favorites","children"],"mappings":"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","sourcesContent":["import React, { useEffect, createContext, useReducer } from \"react\";\r\nimport { getMovies, getUpcomingMovies } from \"../api/tmdb-api\";\r\n\r\nexport const MoviesContext = createContext(null);\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add-favorite\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, favorite: true } : m\r\n        ),\r\n        upcoming: [...state.upcoming]\r\n      };\r\n    case \"load\":\r\n      return { movies: action.payload.movies, upcoming: [...state.upcoming] };\r\n      case \"load-upcoming\":\r\n      return { upcoming: action.payload.movies, movies: [...state.movies] };\r\n    case \"add-review\":\r\n        return {\r\n            movies: state.movies.map((m) =>\r\n              m.id === action.payload.movie.id\r\n                ? { ...m, review: action.payload.review }\r\n                : m\r\n            ),\r\n          };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MoviesContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, { movies: [], upcoming: [] });\r\n\r\n  const addToFavorites = (movieId) => {\r\n    const index = state.movies.map((m) => m.id).indexOf(movieId);\r\n    dispatch({ type: \"add-favorite\", payload: { movie: state.movies[index] } });\r\n  };\r\n\r\n  const addReview = (movie, review) => {\r\n    dispatch({ type: \"add-review\", payload: { movie, review } });\r\n  };\r\n  useEffect(() => {\r\n    getMovies().then((movies) => {\r\n      dispatch({ type: \"load\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUpcomingMovies().then((movies) => {\r\n      dispatch({ type: \"load-upcoming\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        upcoming: state.upcoming,\r\n        favorites: state.favorites,\r\n        addToFavorites: addToFavorites,\r\n        addReview: addReview,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MoviesContextProvider;"]},"metadata":{},"sourceType":"module"}