{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad2-Assignment2\\\\moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad2-Assignment2\\\\moviesApp\\\\src\\\\contexts\\\\genresContext.js\";\nimport React, { useState, useEffect, createContext } from \"react\"; // import { getGenres } from \"../api/tmdb-api\";\n\nimport { getGenres } from \"../api/movie-api\";\nexport var GenresContext = createContext(null);\n\nvar GenresContextProvider = props => {\n  var _useState = useState([{\n    id: \"0\",\n    name: \"All\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      genres = _useState2[0],\n      setGenres = _useState2[1];\n\n  useEffect(() => {\n    getGenres().then(allGenres => {\n      setGenres([genres[0], ...allGenres]);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(GenresContext.Provider, {\n    value: {\n      genres\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default GenresContextProvider;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/wad2-Assignment2/moviesApp/src/contexts/genresContext.js"],"names":["React","useState","useEffect","createContext","getGenres","GenresContext","GenresContextProvider","props","id","name","genres","setGenres","then","allGenres","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D,C,CACA;;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAO,IAAMC,aAAa,GAAGF,aAAa,CAAC,IAAD,CAAnC;;AAEP,IAAMG,qBAAqB,GAAGC,KAAK,IAAI;AAAA,kBACPN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAAD,CAAD,CADD;AAAA;AAAA,MAC5BC,MAD4B;AAAA,MACpBC,SADoB;;AAEnCT,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,GAAGQ,IAAZ,CAAiBC,SAAS,IAAI;AAC5BF,MAAAA,SAAS,CAAC,CAACD,MAAM,CAAC,CAAD,CAAP,EAAY,GAAGG,SAAf,CAAD,CAAT;AACD,KAFD,EADc,CAIhB;AACC,GALQ,EAKN,EALM,CAAT;AAOA,sBACI,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA;AADK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,KAAK,CAACO,QALT,CADJ;AASH,CAlBD;;AAoBA,eAAeR,qBAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\n// import { getGenres } from \"../api/tmdb-api\";\r\nimport { getGenres } from \"../api/movie-api\";\r\n\r\nexport const GenresContext = createContext(null)\r\n\r\nconst GenresContextProvider = props => {\r\n    const [genres, setGenres] = useState([{ id: \"0\", name: \"All\" }]);\r\n    useEffect(() => {\r\n      getGenres().then(allGenres => {\r\n        setGenres([genres[0], ...allGenres]);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <GenresContext.Provider\r\n          value={{\r\n            genres\r\n          }}\r\n        >\r\n          {props.children}\r\n        </GenresContext.Provider>    \r\n    )\r\n}\r\n\r\nexport default GenresContextProvider;"]},"metadata":{},"sourceType":"module"}