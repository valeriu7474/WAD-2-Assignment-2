{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad2-Assignment2\\\\moviesApp\\\\src\\\\components\\\\reviewForm\\\\index.js\";\nimport React, { useContext } from \"react\";\nimport \"./reviewForm.css\";\nimport useForm from \"react-hook-form\";\nimport { MoviesContext } from '../../contexts/moviesContext';\nimport { withRouter } from \"react-router-dom\";\n\nvar ReviewForm = ({\n  movie,\n  history\n}) => {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset;\n\n  var context = useContext(MoviesContext);\n\n  var onSubmit = data => {\n    context.addReview(movie, data);\n    history.push(\"/movies/favorites\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form bg-dark text-light\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Add your review\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Author\",\n    defaultValue: movie.review ? movie.review.author : \"\",\n    name: \"author\",\n    ref: register({\n      required: \"Author name required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), errors.author && /*#__PURE__*/React.createElement(\"p\", {\n    className: \" text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, errors.author.message, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"10\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Write your review\",\n    defaultValue: movie.review ? movie.review.content : \"\",\n    name: \"content\",\n    ref: register({\n      required: \"No review text\",\n      minLength: {\n        value: 10,\n        message: \"Review is too short\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), errors.content && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, errors.content.message, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"btn btn-primary reset\",\n    onClick: () => {\n      reset({\n        author: \"\",\n        content: \"\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Reset\"));\n};\n\nexport default withRouter(ReviewForm);","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/wad2-Assignment2/moviesApp/src/components/reviewForm/index.js"],"names":["React","useContext","useForm","MoviesContext","withRouter","ReviewForm","movie","history","register","handleSubmit","errors","reset","context","onSubmit","data","addReview","push","review","author","required","message","content","minLength","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAAQC,aAAR,QAA4B,8BAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,IAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA,iBACSL,OAAO,EADhB;AAAA,MACjCM,QADiC,YACjCA,QADiC;AAAA,MACvBC,YADuB,YACvBA,YADuB;AAAA,MACTC,MADS,YACTA,MADS;AAAA,MACDC,KADC,YACDA,KADC;;AAEzC,MAAMC,OAAO,GAAGX,UAAU,CAACE,aAAD,CAA1B;;AAEA,MAAMU,QAAQ,GAAGC,IAAI,IAAI;AACvBF,IAAAA,OAAO,CAACG,SAAR,CAAkBT,KAAlB,EAAyBQ,IAAzB;AACAP,IAAAA,OAAO,CAACS,IAAR,CAAa,mBAAb;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAA0C,IAAA,QAAQ,EAAEP,YAAY,CAACI,QAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,YAAY,EAAEP,KAAK,CAACW,MAAN,GAAeX,KAAK,CAACW,MAAN,CAAaC,MAA5B,GAAqC,EAJrD;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,GAAG,EAAEV,QAAQ,CAAC;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAYGT,MAAM,CAACQ,MAAP,iBAAiB;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BR,MAAM,CAACQ,MAAP,CAAcE,OAA1C,MAZpB,eAaE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,WAAW,EAAC,mBAJd;AAKE,IAAA,YAAY,EAAEd,KAAK,CAACW,MAAN,GAAeX,KAAK,CAACW,MAAN,CAAaI,OAA5B,GAAsC,EALtD;AAME,IAAA,IAAI,EAAC,SANP;AAOE,IAAA,GAAG,EAAEb,QAAQ,CAAC;AACZW,MAAAA,QAAQ,EAAE,gBADE;AAEZG,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaH,QAAAA,OAAO,EAAE;AAAtB;AAFC,KAAD,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,EA2BGV,MAAM,CAACW,OAAP,iBACC;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BX,MAAM,CAACW,OAAP,CAAeD,OAA1C,MA5BJ,eA+BE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF,eAkCE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,uBAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbT,MAAAA,KAAK,CAAC;AACJO,QAAAA,MAAM,EAAE,EADJ;AAEJG,QAAAA,OAAO,EAAE;AAFL,OAAD,CAAL;AAID,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlCF,CADF;AAiDD,CA1DD;;AA4DA,eAAejB,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import React, {useContext } from \"react\";\r\nimport \"./reviewForm.css\";\r\nimport useForm from \"react-hook-form\";\r\nimport {MoviesContext} from '../../contexts/moviesContext'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ReviewForm = ({ movie, history }) => {\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const context = useContext(MoviesContext);\r\n\r\n  const onSubmit = data => {\r\n    context.addReview(movie, data)\r\n    history.push(\"/movies/favorites\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form bg-dark text-light\" onSubmit={handleSubmit(onSubmit)}>\r\n      <h3>Add your review</h3>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Author\"\r\n          defaultValue={movie.review ? movie.review.author : \"\"}\r\n          name=\"author\"\r\n          ref={register({ required: \"Author name required\" })}\r\n        />\r\n      </div>\r\n      {errors.author && <p className=\" text-white\">{errors.author.message} </p>}\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          rows=\"10\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Write your review\"\r\n          defaultValue={movie.review ? movie.review.content : \"\"}\r\n          name=\"content\"\r\n          ref={register({\r\n            required: \"No review text\",\r\n            minLength: { value: 10, message: \"Review is too short\" }\r\n          })}\r\n        />\r\n      </div>\r\n      {errors.content && (\r\n        <p className=\"text-white\">{errors.content.message} </p>\r\n      )}\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n      <button\r\n        type=\"reset\"\r\n        className=\"btn btn-primary reset\"\r\n        onClick={() => {\r\n          reset({\r\n            author: \"\",\r\n            content: \"\"\r\n          });\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default withRouter(ReviewForm);"]},"metadata":{},"sourceType":"module"}