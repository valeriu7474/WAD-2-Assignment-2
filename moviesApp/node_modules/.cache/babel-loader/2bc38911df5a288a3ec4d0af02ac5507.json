{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad2-Assignment2\\\\moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad2-Assignment2\\\\moviesApp\\\\src\\\\components\\\\login\\\\index.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from '../../contexts/authContext';\nimport { Link } from \"react-router-dom\";\n\nvar LoginPage = props => {\n  var context = useContext(AuthContext);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var login = () => {\n    context.authenticate(userName, password);\n  }; // Set 'from' to path where browser is redirected after a successful login.\n  // Either / or the protected path user tried to access.\n\n\n  var _ref = props.location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  },\n      from = _ref.from;\n\n  if (context.isAuthenticated === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: from,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Login page\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"You must log in to view the protected pages \"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    placeholder: \"user name\",\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Log in\"));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/wad2-Assignment2/moviesApp/src/components/login/index.js"],"names":["React","useContext","useState","Redirect","AuthContext","Link","LoginPage","props","context","userName","setUserName","password","setPassword","login","authenticate","location","state","from","pathname","isAuthenticated","e","target","value"],"mappings":";;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,MAAMC,OAAO,GAAGP,UAAU,CAACG,WAAD,CAA1B;;AADyB,kBAEOF,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,MAElBO,QAFkB;AAAA,MAERC,WAFQ;;AAAA,mBAGOR,QAAQ,CAAC,EAAD,CAHf;AAAA;AAAA,MAGlBS,QAHkB;AAAA,MAGRC,WAHQ;;AAKzB,MAAMC,KAAK,GAAG,MAAM;AAClBL,IAAAA,OAAO,CAACM,YAAR,CAAqBL,QAArB,EAA+BE,QAA/B;AACD,GAFD,CALyB,CASzB;AACA;;;AAVyB,aAWRJ,KAAK,CAACQ,QAAN,CAAeC,KAAf,IAAwB;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAXhB;AAAA,MAWjBD,IAXiB,QAWjBA,IAXiB;;AAazB,MAAIT,OAAO,CAACW,eAAR,KAA4B,IAAhC,EAAsC;AACpC,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEF,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFF,eAGE;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,WAAW,EAAC,WAAjC;AAA6C,IAAA,QAAQ,EAAEG,CAAC,IAAI;AAC1DV,MAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALb,eAME;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,WAAW,EAAC,UAAjD;AAA4D,IAAA,QAAQ,EAAEF,CAAC,IAAI;AACzER,MAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAQa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARb,eAUE;AAAQ,IAAA,OAAO,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF;AAeD,CA/BD;;AAiCA,eAAeP,SAAf","sourcesContent":["\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from '../../contexts/authContext';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginPage = props => {\r\n  const context = useContext(AuthContext)\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const login = () => {\r\n    context.authenticate(userName, password);\r\n  };\r\n\r\n  // Set 'from' to path where browser is redirected after a successful login.\r\n  // Either / or the protected path user tried to access.\r\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\r\n\r\n  if (context.isAuthenticated === true) {\r\n    return <Redirect to={from} />;\r\n  }\r\n  return (\r\n    <>\r\n      <h2>Login page</h2>\r\n      <p>You must log in to view the protected pages </p>\r\n      <input id=\"username\" placeholder=\"user name\" onChange={e => {\r\n        setUserName(e.target.value);\r\n      }}></input><br />\r\n      <input id=\"password\" type=\"password\" placeholder=\"password\" onChange={e => {\r\n        setPassword(e.target.value);\r\n      }}></input><br />\r\n      {/* Login web form  */}\r\n      <button onClick={login}>Log in</button>\r\n \r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}