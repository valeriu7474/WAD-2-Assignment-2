{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\moviesApp\\\\src\\\\components\\\\templateMovieListPage\\\\index.js\";\nimport React, { useState } from \"react\";\nimport Header from \"../headerMovieList\";\nimport MovieList from \"../movieList\";\nimport FilterControls from \"../filterControls\";\n\nvar MovieListPageTemplate = ({\n  movies,\n  title,\n  action\n}) => {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameFilter = _useState2[0],\n      setNameFilter = _useState2[1];\n\n  var _useState3 = useState(\"0\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      genreFilter = _useState4[0],\n      setGenreFilter = _useState4[1];\n\n  var genre = Number(genreFilter);\n  var displayedMovies = movies.filter(m => {\n    return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }).filter(m => {\n    return genre > 0 ? m.genre_ids.includes(Number(genreFilter)) : true;\n  });\n\n  var handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);else setGenreFilter(value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \". . . . .\", /*#__PURE__*/React.createElement(MovieList, {\n    action: action,\n    movies: displayedMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), \". . . . . .\");\n};\n\nexport default MovieListPageTemplate;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/moviesApp/src/components/templateMovieListPage/index.js"],"names":["React","useState","Header","MovieList","FilterControls","MovieListPageTemplate","movies","title","action","nameFilter","setNameFilter","genreFilter","setGenreFilter","genre","Number","displayedMovies","filter","m","toLowerCase","search","genre_ids","includes","handleChange","type","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAGA,IAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAA+B;AAAA,kBACvBP,QAAQ,CAAC,EAAD,CADe;AAAA;AAAA,MACpDQ,UADoD;AAAA,MACxCC,aADwC;;AAAA,mBAErBT,QAAQ,CAAC,GAAD,CAFa;AAAA;AAAA,MAEpDU,WAFoD;AAAA,MAEvCC,cAFuC;;AAG3D,MAAMC,KAAK,GAAGC,MAAM,CAACH,WAAD,CAApB;AACA,MAAII,eAAe,GAAGT,MAAM,CACzBU,MADmB,CACZC,CAAC,IAAI;AACX,WAAOA,CAAC,CAACV,KAAF,CAAQW,WAAR,GAAsBC,MAAtB,CAA6BV,UAAU,CAACS,WAAX,EAA7B,MAA2D,CAAC,CAAnE;AACD,GAHmB,EAInBF,MAJmB,CAIZC,CAAC,IAAI;AACX,WAAQJ,KAAK,GAAG,CAAR,GACJI,CAAC,CAACG,SAAF,CAAYC,QAAZ,CAAqBP,MAAM,CAACH,WAAD,CAA3B,CADI,GAEJ,IAFJ;AAGD,GARmB,CAAtB;;AAUA,MAAMW,YAAY,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,QAAID,IAAI,KAAK,MAAb,EAAqBb,aAAa,CAACc,KAAD,CAAb,CAArB,KACKZ,cAAc,CAACY,KAAD,CAAd;AACN,GAHD;;AAKA,sBACE,oEAEA,oBAAC,SAAD;AACG,IAAA,MAAM,EAAEhB,MADX;AAEG,IAAA,MAAM,EAAEO,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,gBADF;AAUD,CA7BD;;AA+BA,eAAeV,qBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport MovieList from \"../movieList\";\r\nimport FilterControls from \"../filterControls\";\r\n\r\n\r\nconst MovieListPageTemplate = ({ movies, title, action }) => {\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const genre = Number(genreFilter)\r\n  let displayedMovies = movies\r\n    .filter(m => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    })\r\n    .filter(m => {\r\n      return  genre > 0\r\n        ? m.genre_ids.includes(Number(genreFilter))\r\n        : true;\r\n    });\r\n\r\n  const handleChange = (type, value) => {\r\n    if (type === \"name\") setNameFilter(value);\r\n    else setGenreFilter(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    . . . . . \r\n    <MovieList\r\n       action={action}\r\n       movies={displayedMovies}\r\n    />\r\n    . . . . . . \r\n    </>\r\n);\r\n};\r\n\r\nexport default MovieListPageTemplate ;"]},"metadata":{},"sourceType":"module"}