{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\moviesApp\\\\src\\\\pages\\\\homePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/headerMovieList\";\nimport MovieList from \"../components/movieList\";\nimport FilterControls from \"../components/filterControls\";\nimport StubAPI from \"../api/stubAPI\";\n\nvar MovieListPage = () => {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      titleFilter = _useState2[0],\n      setTitleFilter = _useState2[1]; // NEW\n\n\n  var _useState3 = useState(\"0\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      genreFilter = _useState4[0],\n      setGenreFilter = _useState4[1]; // NEW\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      movies = _useState6[0],\n      setMovies = _useState6[1];\n\n  useEffect(() => {\n    fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(process.env.REACT_APP_TMDB_KEY, \"&language=en-US&include_adult=false&page=1\")).then(res => res.json()).then(json => {\n      console.log(json);\n      return json.results;\n    }).then(movies => {\n      setMovies(movies);\n    });\n  }, []); // NEW BLOCK END\n\n  var genre = Number(genreFilter);\n  var displayedMovies = movies.filter(m => {\n    return m.title.toLowerCase().search(titleFilter.toLowerCase()) !== -1;\n  }).filter(m => {\n    return genre > 0 ? m.genre_ids.includes(Number(genreFilter)) : true;\n  });\n\n  var handleFilterChange = (type, value) => {\n    if (type === \"name\") setTitleFilter(value);else setGenreFilter(value);\n  };\n\n  var addToFavorites = movieId => {\n    // Find index position of selected movie in the list\n    var index = movies.map(m => m.id).indexOf(movieId);\n    StubAPI.add(movies[index]);\n    var updatedList = [...movies]; // Make a copy of the movie list\n\n    updatedList.splice(index, 1); // Remove selected movie from home page list\n\n    setMovies(updatedList);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    numMovies: displayedMovies.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FilterControls, {\n    onUserInput: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    movies: displayedMovies,\n    buttonHandler: addToFavorites,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), \"     \");\n};\n\nexport default MovieListPage;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/moviesApp/src/pages/homePage.js"],"names":["React","useState","useEffect","Header","MovieList","FilterControls","StubAPI","MovieListPage","titleFilter","setTitleFilter","genreFilter","setGenreFilter","movies","setMovies","fetch","process","env","REACT_APP_TMDB_KEY","then","res","json","console","log","results","genre","Number","displayedMovies","filter","m","title","toLowerCase","search","genre_ids","includes","handleFilterChange","type","value","addToFavorites","movieId","index","map","id","indexOf","add","updatedList","splice","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from \"react\";\r\nimport Header from \"../components/headerMovieList\";\r\nimport MovieList from \"../components/movieList\";\r\nimport FilterControls from \"../components/filterControls\";\r\nimport StubAPI from \"../api/stubAPI\";\r\n\r\nconst MovieListPage = () => {\r\n  const [titleFilter, setTitleFilter] = useState(\"\");       // NEW\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");      // NEW\r\n\r\n  const [movies, setMovies] = useState([])\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=1`\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        console.log(json)\r\n        return json.results\r\n      })\r\n      .then(movies => {\r\n        setMovies(movies);\r\n      });\r\n  }, []);\r\n   // NEW BLOCK END\r\n   const genre = Number(genreFilter)\r\n   let displayedMovies = movies\r\n     .filter(m => {\r\n       return m.title.toLowerCase().search(titleFilter.toLowerCase()) !== -1;\r\n     })\r\n     .filter(m => {\r\n       return genre > 0 ? m.genre_ids.includes(Number(genreFilter)) : true;\r\n     });\r\n \r\n   const handleFilterChange = (type, value) => {\r\n     if (type === \"name\") setTitleFilter(value);\r\n     else setGenreFilter(value);\r\n   };\r\n   const addToFavorites = movieId => {\r\n    // Find index position of selected movie in the list\r\n    const index = movies.map(m => m.id).indexOf(movieId)\r\n\r\n    StubAPI.add(movies[index])\r\n    const updatedList = [...movies]  // Make a copy of the movie list\r\n    updatedList.splice(index, 1)     // Remove selected movie from home page list\r\n    setMovies(updatedList)  \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header numMovies={displayedMovies.length} />\r\n      <FilterControls onUserInput={handleFilterChange} />\r\n      <MovieList\r\n        movies={displayedMovies}\r\n        buttonHandler={addToFavorites}\r\n      />     {/* CHANGED */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieListPage;"]},"metadata":{},"sourceType":"module"}