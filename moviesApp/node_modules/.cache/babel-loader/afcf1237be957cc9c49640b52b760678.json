{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad2-Assignment2\\\\moviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\vblas\\\\Desktop\\\\COLLEGE\\\\Year 3\\\\Web App 2\\\\wad2-Assignment2\\\\moviesApp\\\\src\\\\sample\\\\privateRoute.js\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\n\nvar PrivateRoute = props => {\n  var context = useContext(AuthContext); // Destructure props from <privateRoute> \n\n  var Component = props.component,\n      rest = _objectWithoutProperties(props, [\"component\"]);\n\n  console.log(props.location);\n  return context.isAuthenticated === true ? /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 39\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/login\",\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/vblas/Desktop/COLLEGE/Year 3/Web App 2/wad2-Assignment2/moviesApp/src/sample/privateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","props","context","Component","component","rest","console","log","location","isAuthenticated","pathname","state","from"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,IAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,MAAMC,OAAO,GAAGN,UAAU,CAACG,WAAD,CAA1B,CAD4B,CAE5B;;AAF4B,MAGTI,SAHS,GAGcF,KAHd,CAGpBG,SAHoB;AAAA,MAGKC,IAHL,4BAGcJ,KAHd;;AAI5BK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,QAAlB;AACA,SAAON,OAAO,CAACO,eAAR,KAA4B,IAA5B,gBACL,oBAAC,KAAD,oBAAWJ,IAAX;AAAiB,IAAA,MAAM,EAAEJ,KAAK,iBAAI,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,gBAGL,oBAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFS,MAAAA,QAAQ,EAAE,QADR;AAEFC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEX,KAAK,CAACO;AAAd;AAFL,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAUD,CAfD;;AAiBA,eAAeR,YAAf","sourcesContent":["import React, { useContext} from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {AuthContext} from './authContext'\n\nconst PrivateRoute = props => {\n  const context = useContext(AuthContext)\n  // Destructure props from <privateRoute> \n  const { component: Component, ...rest } = props;\n  console.log(props.location)\n  return context.isAuthenticated === true ? (\n    <Route {...rest} render={props => <Component {...props} />} />\n  ) : (\n    <Redirect\n      to={{\n        pathname: \"/login\",\n        state: { from: props.location }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}